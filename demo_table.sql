CREATE DATABASE IF NOT EXISTS MusicLibrary;
USE MusicLibrary;

CREATE TABLE Artist (
    ArtistID INT AUTO_INCREMENT PRIMARY KEY,
    ArtistName VARCHAR(100) NOT NULL,
    Country VARCHAR(50),
    Style VARCHAR(100),
    City VARCHAR(50),
    DateOfBirth DATE,
    Phone VARCHAR(15),
    Email VARCHAR(100) UNIQUE
);

CREATE TABLE Genres (
    GenreID INT AUTO_INCREMENT PRIMARY KEY,
    GenreName VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Album (
    AlbumID INT AUTO_INCREMENT PRIMARY KEY,
    AlbumName VARCHAR(100) NOT NULL,
    PublishedDate DATE,
    ArtistID INT NOT NULL,
    GenreID INT,
    NumberOfTracks INT DEFAULT 0,
    FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    FOREIGN KEY (GenreID) REFERENCES Genres(GenreID) ON DELETE SET NULL
);

CREATE TABLE Songs (
    SongsID INT AUTO_INCREMENT PRIMARY KEY,
    SongName VARCHAR(100) NOT NULL,
    Duration INT NOT NULL CHECK(Duration > 0),
    PublishedDate DATE,
    Language VARCHAR(50),
    AlbumID INT NOT NULL,
    GenreID INT,
    FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID) ON DELETE CASCADE,
    FOREIGN KEY (GenreID) REFERENCES Genres(GenreID) ON DELETE SET NULL
);

CREATE TABLE Library (
    LibraryID INT AUTO_INCREMENT PRIMARY KEY,
    LikedSong INT,
    FavouriteSong INT,
    CreatedDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    TotalSongs INT DEFAULT 0 CHECK(TotalSongs >= 0),
    PlayCount INT DEFAULT 0 CHECK(PlayCount >= 0)
);

CREATE TABLE Users (
    UsersID INT AUTO_INCREMENT PRIMARY KEY,
    UserName VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE,
    JoinedDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Member ENUM('NORMAL', 'PREMIUM') DEFAULT 'NORMAL',
    LibraryID INT NOT NULL,
    Address VARCHAR(100),
    City VARCHAR(50),
    Country VARCHAR(50) NOT NULL,
    FOREIGN KEY (LibraryID) REFERENCES Library(LibraryID) ON DELETE CASCADE
);

CREATE TABLE Playlists (
    PlaylistID INT AUTO_INCREMENT PRIMARY KEY,
    PlaylistName VARCHAR(100) NOT NULL,
    CreatedDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    UserID INT NOT NULL,
    LibraryID INT NOT NULL,
    FOREIGN KEY (UserID) REFERENCES Users(UsersID) ON DELETE CASCADE,
    FOREIGN KEY (LibraryID) REFERENCES Library(LibraryID) ON DELETE CASCADE
);

CREATE TABLE Songs_has_Playlists (
    SongsID INT NOT NULL,
    PlaylistID INT NOT NULL,
    PRIMARY KEY (SongsID, PlaylistID),
    FOREIGN KEY (SongsID) REFERENCES Songs(SongsID) ON DELETE CASCADE,
    FOREIGN KEY (PlaylistID) REFERENCES Playlists(PlaylistID) ON DELETE CASCADE
);
